#!/bin/bash
# Helpful to read output when debugging
set -x

# Isolate host
# Mostly if kernel ACS patching 
systemctl set-property --runtime -- user.slice AllowedCPUs={{ _lsw_host_cpus.stdout }}
systemctl set-property --runtime -- system.slice AllowedCPUs={{ _lsw_host_cpus.stdout }}
systemctl set-property --runtime -- init.scope AllowedCPUs={{ _lsw_host_cpus.stdout }}

{% if _lsw_lg | default(false) %}
modprobe kvmfr static_size_mb=64
chown {{ ansible_env['LOGNAME'] }}:kvm /dev/kvmfr0
{% endif %}

{% if lsw_config_pass_disk_controller %}
echo {{ _lsw_disk_pci_addr.stdout }} > /sys/bus/pci/devices/{{ _lsw_disk_pci_addr.stdout }}/driver/unbind
virsh nodedev-detach pci_{{ _lsw_disk_pci_addr.stdout | replace(':', '_') | replace('.', '_') }}
{% endif %}

{% if lsw_virt_mode == 'passthrough' %}
systemctl stop display-manager.service

# Uncomment autologin lines in Display manager
{% if _lsw_dm.stdout == 'lightdm' %}
sed -i 's/^#autologin-user=/autologin-user={{ ansible_env['LOGNAME'] }}/' /etc/lightdm/lightdm.conf
{% elif _lsw_dm.stdout == 'gdm' %}
sed -i 's/^#  AutomaticLoginEnable = true/AutomaticLoginEnable = true/' /etc/gdm3/daemon.conf
sed -i 's/^#  AutomaticLogin = user1/AutomaticLogin = {{ ansible_env['LOGNAME'] }}/' /etc/gdm3/daemon.conf
{% elif _lsw_dm.stdout == 'sddm' %}
if ! grep -q "^User={{ ansible_env['LOGNAME'] }}$" /etc/sddm.conf; then
    sed -i '/^\[Autologin\]/a User={{ ansible_env['LOGNAME'] }}' /etc/sddm.conf
fi
{% endif %}

{% if lsw_windows_gpu_driver == 'nvidia' %}
sleep 5
systemctl stop nvidia-persistenced
rmmod nvidia_uvm
rmmod nvidia_drm
rmmod nvidia_modeset
rmmod nvidia
{% endif %}

{% for idx in range(_lsw_pci_ids.stdout.split(',') | length) %}
echo 0000:{{ lsw_passthrough_gpu_pci_base_addr }}.{{ idx }} > /sys/bus/pci/devices/0000:{{ lsw_passthrough_gpu_pci_base_addr }}.{{ idx }}/driver/unbind
virsh nodedev-detach pci_0000_{{ lsw_passthrough_gpu_pci_base_addr | replace(':', '_') }}_{{ idx }}
{% endfor %}

modprobe vfio
modprobe vfio_pci
modprobe vfio_iommu_type1
systemctl start display-manager.service
{% endif %}

{% if lsw_virt_mode == 'gvtg' %}
echo 65e0c490-1f9f-47e2-87b4-3f3d14255b2f > "/sys/bus/pci/devices/0000:{{ _lsw_pci_gvtg_cpu.stdout }}/mdev_supported_types/{{ _lsw_mdev_type.stdout }}/create"
{% endif %}

{% if lsw_virt_mode == 'sriov' %}
echo 1 > "/sys/devices/pci0000:00/0000:{{ _lsw_pci_sriov_cpu.stdout }}/sriov_numvfs"
virsh nodedev-detach pci_0000_{{ (_lsw_pci_sriov_cpu.stdout | replace(':', '_') | split('.'))[0] }}_1
{% endif %}
