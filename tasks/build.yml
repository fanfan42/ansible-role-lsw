---

- name: Copy Packer template
  ansible.builtin.template:
    src: packer.json.j2
    dest: '{{ role_path }}/build/packer.json'
    mode: preserve

- name: Copy Windows Unattend template
  ansible.builtin.template:
    src: 'autounattend_{{ lsw_windows_install_template }}.xml.j2'
    dest: '{{ role_path }}/build/autounattend.xml'
    mode: preserve

- name: Generate ISO file for drivers and packages
  community.general.iso_create:
    src_files: '{{ role_path }}/build/extra_packages'
    dest_iso: '{{ role_path }}/build/extra_packages/packages.iso'
    interchange_level: 3
  when: not _lsw_pkgiso.stat.exists

- name: Delete Windows destination directory if exists
  ansible.builtin.file:
    path: '{{ role_path }}/build/windows_img_dir'
    state: absent
  become: true

- name: Prepare build for passthrough mode
  when: lsw_virt_mode == "passthrough"
  become: true
  block:
    - name: Unbind devices before build for passthrough
      ansible.builtin.shell: |
        echo 0000:{{ lsw_passthrough_gpu_pci_base_addr }}.{{ item }} > \
        /sys/bus/pci/devices/0000:{{ lsw_passthrough_gpu_pci_base_addr }}.{{ item }}/driver/unbind
      loop: "{{ range(0, (_lsw_pci_ids.stdout | split(',') | length)) | list }}"
      changed_when: true
    - name: Bind devices to vfio-pci for passthrough
      ansible.builtin.shell: |
        echo 0000:{{ lsw_passthrough_gpu_pci_base_addr }}.{{ item }} > /sys/bus/pci/drivers/vfio-pci/bind
      loop: "{{ range(0, (_lsw_pci_ids.stdout | split(',') | length)) | list }}"
      changed_when: true
    - name: Init Packer plugin QEMU
      ansible.builtin.command:
        cmd: packer plugins install github.com/hashicorp/qemu
        chdir: '{{ role_path }}/build'
      changed_when: true
    - name: Build Windows image for passthrough
      ansible.builtin.command:
        cmd: packer build packer.json
        chdir: '{{ role_path }}/build'
      environment:
        PACKER_LOG: "1"
      changed_when: true

- name: Prepare build for GVT-g mode
  when: lsw_virt_mode == "gvtg"
  become: true
  block:
    - name: Create MDEV device
      ansible.builtin.shell: |
        echo 65e0c490-1f9f-47e2-87b4-3f3d14255b2f > \
        /sys/bus/pci/devices/0000:{{ _lsw_pci_cpu.stdout }}/mdev_supported_types/{{ _lsw_mdev_type.stdout }}/create
      changed_when: true
    - name: Init Packer plugin QEMU
      ansible.builtin.command:
        cmd: packer plugins install github.com/hashicorp/qemu
        chdir: '{{ role_path }}/build'
      changed_when: true
    - name: Build Windows image for gvtg
      ansible.builtin.command:
        cmd: packer build packer.json
        chdir: '{{ role_path }}/build'
      environment:
        PACKER_LOG: "1"
      changed_when: true
    - name: Remove MDEV device
      ansible.builtin.shell: |
        echo 1 > \
        /sys/bus/pci/devices/0000:{{ _lsw_pci_cpu.stdout }}/65e0c490-1f9f-47e2-87b4-3f3d14255b2f/remove
      changed_when: true

- name: Prepare build for SR-IOV mode
  when: lsw_virt_mode == "sriov"
  become: true
  block:
    - name: Start libvirtd for EndeavourOS
      ansible.builtin.systemd:
        name: libvirtd
        state: started
      when: ansible_facts['lsb']['id'] == 'EndeavourOS'
    - name: Create Virtual Function device
      ansible.builtin.shell: echo 1 > "/sys/devices/pci0000:00/0000:{{ _lsw_pci_cpu.stdout }}/sriov_numvfs"
      changed_when: true
    - name: Unbind VF before build for sriov
      ansible.builtin.shell: |
        echo 0000:{{ (_lsw_pci_cpu.stdout | split('.'))[0] }}.1 > \
        /sys/devices/pci0000:00/0000:{{ (_lsw_pci_cpu.stdout | split('.'))[0] }}.1/driver/unbind
      changed_when: true
    - name: Detach VF
      ansible.builtin.command: virsh nodedev-detach pci_0000_{{ (_lsw_pci_cpu.stdout | replace(':', '_') | split('.'))[0] }}_1
      changed_when: true
    - name: Init Packer plugin QEMU
      ansible.builtin.command:
        cmd: packer plugins install github.com/hashicorp/qemu
        chdir: '{{ role_path }}/build'
      changed_when: true
    - name: Build Windows image for sriov
      ansible.builtin.command:
        cmd: packer build packer.json
        chdir: '{{ role_path }}/build'
      environment:
        PACKER_LOG: "1"
      changed_when: true
    - name: Remove Virtual Function device
      ansible.builtin.shell: echo 0 > "/sys/devices/pci0000:00/0000:{{ _lsw_pci_cpu.stdout }}/sriov_numvfs"
      changed_when: true

- name: Copy img to disk
  ansible.builtin.command:
    cmd: |
      qemu-img convert -f {{ lsw_windows_img_format }} -O raw {{ role_path }}/build/windows_img_dir/{{ lsw_windows_vm_name }} {{ lsw_windows_disk_device_path }}
  when: lsw_windows_disk_device_path != ''
  changed_when: true
  become: true
  notify: Reinstall boot loader with Windows Disk

- name: Remove vfio build configuration for Passthrough Virtualization mode
  ansible.builtin.file:
    path: '{{ item }}'
    state: absent
  loop:
    - /etc/dracut.conf.d/vfio.conf
    - /etc/modprobe.d/vfio.conf
    - /etc/modules-load.d/vfio.conf
  when: lsw_virt_mode == "passthrough"
  become: true
  notify:
    - Reload Boot Loader
    - Reload initramfs
