---

- name: Install specific keys and repositories for Debian
  when: ansible_facts['lsb']['id'] == 'Debian'
  become: true
  block:
    - name: Import keys
      ansible.builtin.get_url:
        url: "{{ item }}"
        dest: "/etc/apt/trusted.gpg.d/{{ item | basename }}.gpg"
        mode: '0644'
      loop: "{{ pgs_apt_keys }}"
    - name: Add APT repositories
      ansible.builtin.apt_repository:
        repo: '{{ item }}'
        state: present
      loop: '{{ pgs_apt_repos }}'

- name: Install needed packages
  ansible.builtin.package:
    name: '{{ pgs_packages }}'
    state: present
  become: true

- name: Check if packer already installed on Debian
  ansible.builtin.stat:
    path: /usr/local/bin/packer
  register: _pkr_bin
  when: ansible_facts['lsb']['id'] == 'Debian'

- name: Install Packer on Debian
  when:
    - ansible_facts['lsb']['id'] == 'Debian'
    - not _pkr_bin.stat.exists
  block:
    - name: Get checksum list
      ansible.builtin.set_fact:
        __pkr_cs: "{{ lookup('ansible.builtin.url', 'https://releases.hashicorp.com/packer/{{ pgs_debian_packer_version }}/packer_{{ pgs_debian_packer_version }}_SHA256SUMS', wantlist=True) | list }}"
      until: __pkr_cs is search('linux_amd64.zip')
      retries: 10
    - name: Get checksum for amd64
      ansible.builtin.set_fact:
        __pkr_checksum: "{{ item.split(' ')[0] }}"
      loop: '{{ __pkr_cs }}'
      when: "('linux_amd64.zip') in item"
    - name: Download packer binary to local folder
      ansible.builtin.get_url:
        url: 'https://releases.hashicorp.com/packer/{{ pgs_debian_packer_version }}/packer_{{ pgs_debian_packer_version }}_linux_amd64.zip'
        dest: /tmp/packer.zip
        checksum: 'sha256:{{ __pkr_checksum }}'
        mode: "0644"
      register: _download
      until: _download is succeeded
      retries: 5
      delay: 2
    - name: Unpack Packer binary
      ansible.builtin.unarchive:
        src: /tmp/packer.zip
        dest: /usr/local/bin
        mode: "0755"
        owner: root
        group: root
      become: true

- name: Install pycdlib on EndeavourOS
  ansible.builtin.command: yay -S --noconfirm --needed python-wheel python-pycdlib-git
  register: _install_eos
  changed_when: "'install' in _install_eos.stdout.lower()"
  when: ansible_facts['lsb']['id'] == 'EndeavourOS'

- name: Install Looking Glass on EndeavourOS
  ansible.builtin.command: yay -S --noconfirm --needed looking-glass
  register: _install_eos_lg
  changed_when: "'install' in _install_eos_lg.stdout.lower()"
  when:
    - ansible_facts['lsb']['id'] == 'EndeavourOS'
    - pgs_install_looking_glass

- name: Check if Looking Glass already installed on Debian
  ansible.builtin.stat:
    path: /usr/local/bin/looking-glass-client
  register: _lg_bin
  when: ansible_facts['lsb']['id'] == 'Debian'

- name: Install Looking Glass on Debian
  when:
    - ansible_facts['lsb']['id'] == 'Debian'
    - pgs_install_looking_glass
    - not _lg_bin.stat.exists
  block:
    - name: Install Looking Glass build dependencies
      ansible.builtin.package:
        name: '{{ pgs_debian_lg_dependencies }}'
        state: present
      become: true
    - name: Get Looking Glass sources
      ansible.builtin.get_url:
        url: '{{ pgs_debian_lg_url }}'
        dest: /tmp/looking-glass.tar.gz
        mode: "0644"
    - name: Unarchive Looking Glass sources
      ansible.builtin.unarchive:
        src: /tmp/looking-glass.tar.gz
        dest: /tmp
    - name: Create build directory
      ansible.builtin.file:
        path: '/tmp/looking-glass-{{ pgs_debian_lg_version }}/client/build'
        state: directory
        mode: "0755"
    - name: Run cmake
      ansible.builtin.command:
        cmd: cmake ../
        chdir: '/tmp/looking-glass-{{ pgs_debian_lg_version }}/client/build'
      changed_when: true
    - name: Run make
      community.general.make:
        jobs: '{{ ansible_processor_vcpus }}'
        chdir: '/tmp/looking-glass-{{ pgs_debian_lg_version }}/client/build'
    - name: Run make install
      community.general.make:
        chdir: '/tmp/looking-glass-{{ pgs_debian_lg_version }}/client/build'
        target: install
      become: true
    - name: Remove Looking Glass build dependencies
      ansible.builtin.package:
        name: '{{ pgs_debian_lg_dependencies }}'
        state: absent
      become: true
      when: pgs_debian_rm_lg_dependencies

- name: Install Zen Kernel on EndeavourOS
  ansible.builtin.command: downgrade --prefer-cache --ignore always {{ item }} -- --noconfirm --needed
  register: _install_eos_zen
  changed_when: "'install' in _install_eos_zen.stdout.lower()"
  loop: "{{ pgs_zen_packages }}"
  when:
    - ansible_facts['lsb']['id'] == 'EndeavourOS'
    - pgs_install_zen
    - pgs_virt_mode != 'gvtg'
  notify:
    - Reboot
    - Pause
  become: true

- name: Install Zen Kernel on EndeavourOS with GVT-g
  ansible.builtin.command: downgrade --prefer-cache --ignore always {{ item }} -- --noconfirm --needed
  register: _install_eos_zen
  changed_when: "'install' in _install_eos_zen.stdout.lower()"
  loop: "{{ pgs_zen_gvtg_packages }}"
  when:
    - ansible_facts['lsb']['id'] == 'EndeavourOS'
    - pgs_install_zen
    - pgs_virt_mode == 'gvtg'
  notify:
    - Reboot
    - Pause
  become: true

- name: Install Zen Kernel on Debian
  ansible.builtin.package:
    name: '{{ pgs_zen_packages }}'
    state: present
  when:
    - ansible_facts['lsb']['id'] == 'Debian'
    - pgs_install_zen
    - pgs_virt_mode != 'gvtg'
  notify:
    - Reboot
    - Pause
  become: true

- name: Install Zen Kernel on Debian with GVT-g
  ansible.builtin.package:
    name: '{{ pgs_zen_gvtg_packages }}'
    state: present
  when:
    - ansible_facts['lsb']['id'] == 'Debian'
    - pgs_install_zen
    - pgs_virt_mode == 'gvtg'
  notify:
    - Reboot
    - Pause
  become: true
